version: '3.7'

services:
  sample2:
    build:
      context: .  # Build the HTML page from the Dockerfile in the current directory
    networks:
      - citus_network
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    expose:
      - "5002"  # Expose port 80 for the NGINX load balancer to access
    deploy:
      replicas: 3  # Scale to 3 replicas of the HTML page service
    environment:
      - MAINTENANCE_MODE=true  # Set to true for maintenance mode
    command: ["sh", "-c", "if [ \"$MAINTENANCE_MODE\" = \"true\" ]; then node maintenance.mjs; fi"]

  #   environment:
  #     POSTGRES_HOST:  10.10.2.194 # Use master node as the DB host
  #     POSTGRES_PORT: 5432
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: coordinator_postgres
  #     POSTGRES_HOST_AUTH_METHOD: md5

  # # Citus Worker Nodes (No ports needed)
  # worker1:
  #   image: citusdata/citus
  #   container_name: citus_worker1
  #   environment:
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_USER: postgres
  #     POSTGRES_DB: coordinator_postgres
  #   ports:
  #     - "5433:5432"  # Expose to host on port 5433
  #   networks:
  #     - citus_network
  #   restart: always
  #   command: ["postgres", "-c", "shared_preload_libraries=citus"] 
  #   volumes:
  #     - worknode1-data:/var/lib/postgresql/data

  # worker2:
  #   image: citusdata/citus
  #   container_name: citus_worker2
  #   environment:
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_USER: postgres
  #     POSTGRES_DB: coordinator_postgres
  #   ports:
  #     - "5434:5432"  # Expose to host on port 5434
  #   networks:
  #     - citus_network
  #   restart: always
  #   command: ["postgres", "-c", "shared_preload_libraries=citus"] 
  #   volumes:
  #     - worknode2-data:/var/lib/postgresql/data
   

  nginx:
    image: nginx:alpine  # Use the official NGINX image
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Mount the custom NGINX config
    ports:
      - "5002:5002"  # Expose port 5003 on the host, forwarding to port 5003 on the container
    networks:
      - citus_network

networks:
  citus_network:
    driver: bridge

volumes:  
  worknode1-data:
  worknode2-data:
